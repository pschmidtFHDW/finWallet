{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isPlatformBrowser } from '@angular/common';\nimport { traceUntil as traceUntil$1, traceWhile as traceWhile$1, traceUntilComplete as traceUntilComplete$1, traceUntilFirst as traceUntilFirst$1 } from 'rxfire/performance';\nimport { getPerformance as getPerformance$1, initializePerformance as initializePerformance$1, trace as trace$1 } from 'firebase/performance';\nexport * from 'firebase/performance';\n\nclass Performance {\n  constructor(performance) {\n    return performance;\n  }\n\n}\n\nconst PERFORMANCE_PROVIDER_NAME = 'performance';\n\nclass PerformanceInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);\n  }\n\n}\n\nconst performanceInstance$ = /*#__PURE__*/ /*#__PURE__*/timer(0, 300).pipe( /*#__PURE__*/concatMap(() => from(ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME))), /*#__PURE__*/distinct());\nconst PROVIDED_PERFORMANCE_INSTANCES = /*#__PURE__*/new InjectionToken('angularfire2.performance-instances');\n\nfunction defaultPerformanceInstanceFactory(provided, defaultApp, // tslint:disable-next-line:ban-types\nplatform) {\n  if (!isPlatformBrowser(platform)) {\n    return null;\n  }\n\n  const defaultPerformance = ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);\n  return defaultPerformance && new Performance(defaultPerformance);\n}\n\nfunction performanceInstanceFactory(fn) {\n  // tslint:disable-next-line:ban-types\n  return (zone, platform, injector) => {\n    if (!isPlatformBrowser(platform)) {\n      return null;\n    }\n\n    const performance = zone.runOutsideAngular(() => fn(injector));\n    return new Performance(performance);\n  };\n}\n\nconst PERFORMANCE_INSTANCES_PROVIDER = {\n  provide: PerformanceInstances,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_PERFORMANCE_INSTANCES]]\n};\nconst DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {\n  provide: Performance,\n  useFactory: defaultPerformanceInstanceFactory,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_PERFORMANCE_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\nlet PerformanceModule = /*#__PURE__*/(() => {\n  class PerformanceModule {\n    constructor() {\n      registerVersion('angularfire', VERSION.full, 'perf');\n    }\n\n  }\n\n  PerformanceModule.ɵfac = function PerformanceModule_Factory(t) {\n    return new (t || PerformanceModule)();\n  };\n\n  PerformanceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PerformanceModule\n  });\n  PerformanceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_PERFORMANCE_INSTANCE_PROVIDER, PERFORMANCE_INSTANCES_PROVIDER]\n  });\n  return PerformanceModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction providePerformance(fn, ...deps) {\n  return {\n    ngModule: PerformanceModule,\n    providers: [{\n      provide: PROVIDED_PERFORMANCE_INSTANCES,\n      useFactory: performanceInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, PLATFORM_ID, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst traceUntil = /*#__PURE__*/ɵzoneWrap(traceUntil$1, true);\nconst traceWhile = /*#__PURE__*/ɵzoneWrap(traceWhile$1, true);\nconst traceUntilComplete = /*#__PURE__*/ɵzoneWrap(traceUntilComplete$1, true);\nconst traceUntilFirst = /*#__PURE__*/ɵzoneWrap(traceUntilFirst$1, true); // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\nconst getPerformance = /*#__PURE__*/ɵzoneWrap(getPerformance$1, true);\nconst initializePerformance = /*#__PURE__*/ɵzoneWrap(initializePerformance$1, true);\nconst trace = /*#__PURE__*/ɵzoneWrap(trace$1, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Performance, PerformanceInstances, PerformanceModule, getPerformance, initializePerformance, performanceInstance$, providePerformance, trace, traceUntil, traceUntilComplete, traceUntilFirst, traceWhile }; //# sourceMappingURL=angular-fire-performance.js.map","map":null,"metadata":{},"sourceType":"module"}